--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone" LPM_DECODES=8 LPM_WIDTH=3 data enable eq
--VERSION_BEGIN 11.0 cbx_cycloneii 2011:04:27:21:07:09:SJ cbx_lpm_add_sub 2011:04:27:21:07:09:SJ cbx_lpm_compare 2011:04:27:21:07:09:SJ cbx_lpm_decode 2011:04:27:21:07:09:SJ cbx_mgl 2011:04:27:21:08:59:SJ cbx_stratix 2011:04:27:21:07:09:SJ cbx_stratixii 2011:04:27:21:07:09:SJ  VERSION_END


-- Copyright (C) 1991-2011 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 8 
SUBDESIGN decode_nga
( 
	data[2..0]	:	input;
	enable	:	input;
	eq[7..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[7..0]	: WIRE;
	eq_wire[7..0]	: WIRE;
	w_anode413w[3..0]	: WIRE;
	w_anode430w[3..0]	: WIRE;
	w_anode440w[3..0]	: WIRE;
	w_anode450w[3..0]	: WIRE;
	w_anode460w[3..0]	: WIRE;
	w_anode470w[3..0]	: WIRE;
	w_anode480w[3..0]	: WIRE;
	w_anode490w[3..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[7..0] = eq_wire[7..0];
	eq_wire[] = ( w_anode490w[3..3], w_anode480w[3..3], w_anode470w[3..3], w_anode460w[3..3], w_anode450w[3..3], w_anode440w[3..3], w_anode430w[3..3], w_anode413w[3..3]);
	w_anode413w[] = ( (w_anode413w[2..2] & (! data_wire[2..2])), (w_anode413w[1..1] & (! data_wire[1..1])), (w_anode413w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode430w[] = ( (w_anode430w[2..2] & (! data_wire[2..2])), (w_anode430w[1..1] & (! data_wire[1..1])), (w_anode430w[0..0] & data_wire[0..0]), enable_wire);
	w_anode440w[] = ( (w_anode440w[2..2] & (! data_wire[2..2])), (w_anode440w[1..1] & data_wire[1..1]), (w_anode440w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode450w[] = ( (w_anode450w[2..2] & (! data_wire[2..2])), (w_anode450w[1..1] & data_wire[1..1]), (w_anode450w[0..0] & data_wire[0..0]), enable_wire);
	w_anode460w[] = ( (w_anode460w[2..2] & data_wire[2..2]), (w_anode460w[1..1] & (! data_wire[1..1])), (w_anode460w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode470w[] = ( (w_anode470w[2..2] & data_wire[2..2]), (w_anode470w[1..1] & (! data_wire[1..1])), (w_anode470w[0..0] & data_wire[0..0]), enable_wire);
	w_anode480w[] = ( (w_anode480w[2..2] & data_wire[2..2]), (w_anode480w[1..1] & data_wire[1..1]), (w_anode480w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode490w[] = ( (w_anode490w[2..2] & data_wire[2..2]), (w_anode490w[1..1] & data_wire[1..1]), (w_anode490w[0..0] & data_wire[0..0]), enable_wire);
END;
--VALID FILE
